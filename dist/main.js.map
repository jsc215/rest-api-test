{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/dropdown/dropdown.component.css","webpack:///./src/app/dropdown/dropdown.component.html","webpack:///./src/app/dropdown/dropdown.component.ts","webpack:///./src/app/stocks/stocks.component.css","webpack:///./src/app/stocks/stocks.component.html","webpack:///./src/app/stocks/stocks.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\n  text-align: center;\\n}\\n\\n\"","module.exports = \"<div>\\n  <h1>{{ title }}</h1>\\n</div>\\n<br>\\n<app-dropdown></app-dropdown>\\n<div class='row'>\\n  <div class='col-sm-6'>\\n    <app-users></app-users>\\n  </div>\\n  <div class='col-sm-6'>\\n    <app-stocks></app-stocks>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Rest Api Practice';\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { StocksComponent } from './stocks/stocks.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    StocksComponent,\n    DropdownComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  \n  constructor(private http: HttpClient) { }\n\n  getUsers() {\n    return this.http.get('/api/users');\n  }\n\n  getStocks() {\n    return this.http.get('api/stocks');\n  }\n\n  addRandom(sector) {\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<select (change)= 'onChange($event)'>\\n  <option *ngFor=\\\"let sector of sectors\\\" [value]='sector.value'>{{sector.sector}}</option> \\n</select>\"","import { Component, OnInit } from '@angular/core';\n\n\n\nexport interface Sector {\n  value: string;\n  sector: string;\n}\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css']\n})\nexport class DropdownComponent {\n  value;\n  sector;\n  sectors: Sector[] = [\n    { value: 'financial', sector: 'Financial' },\n    { value: 'healthcare', sector: 'Healthcare' },\n    { value: 'services', sector: 'Services' },\n    { value: 'technology', sector: 'Technology' },\n    { value: 'industrial goods', sector: 'Industrial Goods' }\n  ];\n\n  onChange(event) {\n  \n    this.value = event.target.value;\n  \n    console.log(this.value);\n   // this.sector = event.target.sector;\n\n  }\n}\n\n\n","module.exports = \".stock {\\n  /* display: flex; */\\n  height: 600px;\\n  overflow-y: scroll;\\n  /* flex-direction: column; */\\n  background-color: lavender;\\n  padding: 10px;\\n  border-radius: 10px;\\n}\\n\\n\"","module.exports = \"\\n\\n  <div class=\\\"shadow p-3 mb-5 bg-white rounded\\\">\\n  <h2>Stocks</h2>\\n    <div class=\\\"stock\\\">\\n  <div *ngFor='let stock of stocks'>\\n    <p>Company: {{stock.Company}}</p>\\n    <p>Sector: {{stock.Sector}}</p>\\n    <p>Ticker: {{stock.Ticker}}</p>\\n    <hr>\\n  </div>\\n</div>\\n</div>\\n\"","import { DataService } from './../data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stocks',\n  templateUrl: './stocks.component.html',\n  styleUrls: ['./stocks.component.css']\n})\nexport class StocksComponent implements OnInit {\n  stocks;\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.getStocks();\n  }\n\n  getStocks() {\n   this.dataService.getStocks().subscribe((stocks) => (this.stocks = stocks));\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class='container'>\\n  <ul class='list-group'>\\n    <div *ngFor='let user of users'>\\n      <li class='list-group-item h4'>User: {{user.firstName}}\\n        <p class='mb-0 h5'>Stocks</p>\\n        <div *ngFor=\\\"let stock of user['stock']\\\">\\n          <ul>\\n            <li class='h6'>{{stock.Company}} (Ticker: {{stock.Ticker}})\\n              <!-- Sector: {{stock.Sector}} Ticker: {{stock.Ticker}}  -->\\n            </li>\\n          </ul>\\n        </div>\\n      </li>\\n    </div>\\n  </ul>\\n</div>\"","import { DataService } from './../data.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users;\n  constructor(private dataService: DataService) {}\n  ngOnInit() {\n    this.getUsers();\n  }\n  getUsers() {\n   this.dataService.getUsers().subscribe((users) => (this.users = users));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}